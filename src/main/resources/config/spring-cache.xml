<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager">
            <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
                <property name="configLocation" value="classpath:config/ehcache.xml"/>
                <!-- CacheManager使用了Singleton，这样在创建多个CacheManager时就会产生Another unnamed CacheManager already exists in the same VM错误 -->
                <!-- 需添加shared true 来共享解决 -->
                <property name="shared" value="true"/>
            </bean>
        </property>
        <property name="transactionAware" value="true"/>
    </bean>

    <cache:advice id="userAdvisor" cache-manager="cacheManager">
        <cache:caching cache="users">
            <!-- cache-put是每次都会执行该方法，并将执行结果以键值对的形式存入指定的缓存中 -->
            <!-- 判断unless,如果返回false,则放入缓存;(即跟condition相反) -->
            <cache:cacheable method="loadById" key="#p0" unless="#result==null" />
            <cache:cache-evict method="update" key="#p0.id" />
            <cache:cache-evict method="deleteById" key="#p0" />
        </cache:caching>
    </cache:advice>

    <cache:advice id="postAdvisor" cache-manager="cacheManager">
        <cache:caching cache="posts">
            <cache:cacheable method="loadById" key="#p0" />
            <cache:cache-evict method="update" key="#p0.id" />
            <cache:cache-evict method="deleteById" key="#p0" />
        </cache:caching>
    </cache:advice>

    <cache:advice id="prenextAdvisor" cache-manager="cacheManager">
        <cache:caching cache="prevnexts">
            <cache:cacheable method="getNextPost" key="'next-' + #p0" />
            <cache:cacheable method="getPrevPost" key="'prev-' + #p0" />
            <cache:cache-evict method="insert" all-entries="true" />
            <cache:cache-evict method="update" all-entries="true" />
            <cache:cache-evict method="deleteById" all-entries="true"  />
        </cache:caching>
    </cache:advice>

    <cache:advice id="tagAdvisor" cache-manager="cacheManager">
        <cache:caching cache="tags">
            <cache:cacheable method="listTagsByPost" key="#p0" />
            <cache:cache-evict method="deleteByPostid" key="#p0" />
        </cache:caching>
    </cache:advice>

    <cache:advice id="categoryAdvisor" cache-manager="cacheManager">
        <cache:caching cache="categorys">
            <cache:cacheable method="loadById" key="#p0" />
            <cache:cacheable method="loadByName" key="#p0" />
            <cache:cache-evict method="remove" all-entries="true" />
        </cache:caching>
    </cache:advice>

    <cache:advice id="optionsAdvisor" cache-manager="cacheManager">
        <cache:caching cache="options">
            <cache:cacheable method="getOptionValue" key="#p0" unless="#result==null" />
            <cache:cache-evict method="updateOptionValue" key="#p0" />
        </cache:caching>
    </cache:advice>

    <aop:config>
        <aop:advisor advice-ref="userAdvisor" pointcut="target(com.fblog.service.UserService) and
       (execution(* loadById(..)) || execution(* update(..)) || execution(* deleteById(..)))"/>

        <aop:advisor advice-ref="postAdvisor" pointcut="target(com.fblog.service.PostService) and
       (execution(* loadById(..)) || execution(* update(..)) || execution(* deleteById(..)))" />

        <aop:advisor advice-ref="prenextAdvisor" pointcut="target(com.fblog.service.PostService) and
       (execution(* getPrevPost(..)) || execution(* getNextPost(..)) || execution(* insert(..)) ||
        execution(* update(..)) || execution(* deleteById(..)))" />

        <aop:advisor advice-ref="tagAdvisor" pointcut="target(com.fblog.service.TagService) and
       (execution(* listTagsByPost(..)) || execution(* deleteByPostid(..)))" />

        <aop:advisor advice-ref="categoryAdvisor" pointcut="target(com.fblog.service.CategoryService) and
       (execution(* loadById(..)) || execution(* remove(..)) || execution(* loadByName(..)))" />

        <aop:advisor advice-ref="optionsAdvisor" pointcut="target(com.fblog.service.OptionsService) and
       (execution(* getOptionValue(..)) || execution(* updateOptionValue(..)))" />
    </aop:config>



</beans>